@model ProjectEditingViewModel
@using Sattelite.EntityFramework.ViewModels.Admin.Project
@using Sattelite.Web
@using System.Web.Optimization

@{
    ViewBag.Title = "Редагування проекту";
    var allCategories = AppCach.AllCategories;
    var allUsers = AppCach.AllUsers;
}

@using (Html.BeginForm("Edit", "Project", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <div class="box">
        <div class="box-head h5"> @ViewBag.Title @Model.Name </div>
        <div class="form">
            @Html.HiddenFor(m => m.ProjectId)
            @Html.ValidationSummary(true)
            <div class="form-group">
                <div class="row">
                    <div class="col-md-6">
                        <label for="Name" class="control-label">Назва<span>(*)max 100 symbol</label>
                        @Html.TextBoxFor(x => x.Name, new { Class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Name, null, new { @class = "text-danger" })
                    </div>

                    <div class="col-md-3">
                        <label for="CategoryId" class="control-label">Категорія</label>
                        @Html.DropDownListFor(x => x.CategoryId, new SelectList(allCategories, "Id", "Name", Model.CategoryId), new { Class = "form-control" })
                        @Html.ValidationMessageFor(m => m.CategoryId, null, new { @class = "text-danger" })
                    </div>

                    <div class="col-md-3">
                        <label for="CoordinatorId" class="control-label">Куратор</label>
                        @Html.DropDownListFor(x => x.CoordinatorId, new SelectList(allUsers, "Id", "UserName", Model.CoordinatorId), new { Class = "form-control" })
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="row">
                    <div class="col-md-12">
                        <label for="ShortDescription" class="control-label">Опис<span>(*)</span></label>
                        @Html.TextAreaFor(x => x.ShortDescription, new { Class = "form-control" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="row">
                    <div class="col-md-12">
                        <label for="Content" class="control-label">Основний контент</label>
                        @Html.TextAreaFor(x => x.Content, new { Class = "form-control" })
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="row">
                    <div class="col-md-12">
                        <label class="control-label label-info">Виконавці</label>
                        <a class="add-button"
                           href="/Admin/Project/AddProjectMember/@Model.ProjectId"
                           data-toggle="modal" data-target="#add_project_member_modal">
                            <span> Додати учасника до проекту</span>
                        </a>

                        <table class="filterable table table-striped table-bordered">
                            <thead>
                                <tr>
                                    <th>
                                        @Html.Label("Name")
                                    </th>
                                    <th>
                                        @Html.Label("Email")
                                    </th>
                                    <th>
                                        @Html.Label("Role")
                                    </th>
                                    <th> </th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var member in Model.ProjectMembers)
                                {
                                    //TODO: User -> display info from UserProfile
                                    <tr>
                                        <td> @member.User.DisplayName </td>
                                        <td> @member.User.Email </td>
                                        <td> @member.ProjectRole.Name </td>
                                        <td>
                                            <a href="/Admin/Project/DeleteProjectMember/@member.Id" class="ico del" data-toggle="modal" data-target="#delete_project_member_modal">
                                                <span> Delete</span>
                                            </a>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="buttons">
                    @Html.ActionLink("Всі проекти", "Index", null, new { @class = "btn btn-info pull-left" })
                    <input type="submit" class="btn btn-success" value="Зберегти" />
                </div>
            </div>
        </div>
    </div>
}

<!-- MODALS -->
<div id="delete_project_member_modal" class="modal fade" aria-hidden="true" aria-labelledby="AreaMember" role="dialog" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content"> </div>
    </div>
</div>

<div id="add_project_member_modal" class="modal fade" aria-hidden="true" aria-labelledby="AreaMember" role="dialog" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content"> </div>
    </div>
</div>

@section Scripts
{
    <script type="text/javascript">
        $(function () {
            var form = $('form');
            form.submit(function (e) {
                e.preventDefault();

                //Get correct\selected
                var newCategoryId = $("select[name='CategoryId'] option:selected").val();
                var newCoordinatorId = $("select[name='CoordinatorId'] option:selected").val();

                var projectViewModel = $(this).serializeArray();

                $.each(projectViewModel, function () {
                    if (this.name == 'CategoryId') {
                        this.value = newCategoryId;
                    }
                    if (this.name == 'CoordinatorId') {
                        this.value = newCoordinatorId;
                    }
                });

                //Pass corrected ViewModel to action
                var url = $('form').attr('action'); // href="/Admin/Project/Edit"
                $.post(url, projectViewModel, function (response) {

                }).fail(function (response) {
                    //var errorMsg = (response.error) ? response.error.message : response.message;
                    var errorMsg = 'Error to delete(update) record. Seems to be related child tables\records, related to this one';
                    swal({
                        title: "Error",
                        text: errorMsg,
                        type: "warning",
                        showCancelButton: false,
                        closeOnConfirm: true
                    }, function () {
                        //if Edit is opened in modal window
                        //var theModal = $(this).closest('.modal').find('form');
                        //theModal.modal("hide");
                    });
                }).always(function (response) {
                    //abp.ui.clearBusy($(busyModal));
                });

            });
        });
    </script>
}
